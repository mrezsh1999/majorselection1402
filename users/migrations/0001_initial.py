# Generated by Django 4.1.7 on 2023-03-12 10:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('booklet_information', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='mobile')),
                ('is_student', models.BooleanField(default=False)),
                ('is_advisor', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'advisor',
                'verbose_name_plural': 'advisors',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'manager',
                'verbose_name_plural': 'managers',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('gender', models.BooleanField(choices=[(True, 'مرد'), (False, 'زن')], null=True)),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('field_of_study', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'ریاضی'), (1, 'تجربی'), (2, 'انسانی'), (3, 'هنر'), (4, 'زبان')], null=True)),
                ('volunteer_code', models.IntegerField(blank=True, null=True)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='booklet_information.province')),
                ('student_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.advisor')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_card_file', models.FileField(upload_to='report_card_file')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_card', to='users.student')),
            ],
            options={
                'verbose_name': 'report card',
                'verbose_name_plural': 'report cards',
            },
        ),
        migrations.AddField(
            model_name='advisor',
            name='manager_field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.manager'),
        ),
    ]
